apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-jmxtrans-config
data:
  metrics.json: |+
    {"obj": "java.lang:type=Memory", "attr": ["HeapMemoryUsage","NonHeapMemoryUsage"], "resultAlias": "jvmMemory"}
    {"obj": "kafka.server:type=ReplicaManager,name=UnderReplicatedPartitions", "attr": ["Value"], "resultAlias": "UnderReplicatedPartitions"}
    {"obj": "kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec", "attr": ["Count","MeanRate","OneMinuteRate","FiveMinuteRate","FifteenMinuteRate"], "resultAlias": "MessagesInPerSec"}
    {"obj": "kafka.server:type=BrokerTopicMetrics,name=MessagesInPerSec,topic=*", "attr": ["Count","MeanRate","OneMinuteRate","FiveMinuteRate","FifteenMinuteRate"], "resultAlias": "MessagesInPerSecPerTopic"}
    {"obj": "kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec", "attr": ["Count","MeanRate","OneMinuteRate","FiveMinuteRate","FifteenMinuteRate"], "resultAlias": "BytesInPerSec"}
    {"obj": "kafka.server:type=BrokerTopicMetrics,name=BytesInPerSec,topic=*", "attr": ["Count","MeanRate","OneMinuteRate","FiveMinuteRate","FifteenMinuteRate"], "resultAlias": "BytesInPerSecPerTopic"}
    {"obj": "kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec", "attr": ["Count","MeanRate","OneMinuteRate","FiveMinuteRate","FifteenMinuteRate"], "resultAlias": "BytesOutPerSec"}
    {"obj": "kafka.server:type=BrokerTopicMetrics,name=BytesOutPerSec,topic=*", "attr": ["Count","MeanRate","OneMinuteRate","FiveMinuteRate","FifteenMinuteRate"], "resultAlias": "BytesOutPerSecPerTopic"}
    {"obj": "kafka.server:type=ReplicaManager,name=PartitionCount", "attr": ["Value"], "resultAlias": "PartitionCount"}
    {"obj": "kafka.server:type=ReplicaManager,name=LeaderCount", "attr": ["Value"], "resultAlias": "LeaderCount"}
    {"obj": "kafka.server:type=ReplicaManager,name=IsrShrinksPerSec", "attr": ["Count","MeanRate","OneMinuteRate","FiveMinuteRate","FifteenMinuteRate"], "resultAlias": "IsrShrinksPerSec"}
    {"obj": "kafka.server:type=ReplicaManager,name=IsrExpandsPerSec", "attr": ["Count","MeanRate","OneMinuteRate","FiveMinuteRate","FifteenMinuteRate"], "resultAlias": "IsrExpandsPerSec"}
    {"obj": "kafka.server:type=KafkaRequestHandlerPool,name=RequestHandlerAvgIdlePercent", "attr": ["MeanRate"], "resultAlias": "RequestHandlerAvgIdlePercent"}
    {"obj": "kafka.controller:type=KafkaController,name=OfflinePartitionsCount", "attr": ["Value"], "resultAlias": "OfflinePartitionsCount"}
    {"obj": "kafka.controller:type=KafkaController,name=ActiveControllerCount", "attr": ["Value"], "resultAlias": "ActiveControllerCount"}
    {"obj": "kafka.controller:type=ControllerStats,name=LeaderElectionRateAndTimeMs", "attr": ["Count","MeanRate","OneMinuteRate","FiveMinuteRate","FifteenMinuteRate"], "resultAlias": "LeaderElectionRateAndTimeMs"}
    {"obj": "kafka.controller:type=ControllerStats,name=UncleanLeaderElectionsPerSec", "attr": ["Count","MeanRate","OneMinuteRate","FiveMinuteRate","FifteenMinuteRate"], "resultAlias": "UncleanLeaderElectionsPerSec"}
    {"obj": "kafka.network:type=RequestMetrics,name=RequestsPerSec,request=Produce", "attr": ["Count","MeanRate","OneMinuteRate","FiveMinuteRate","FifteenMinuteRate"], "resultAlias": "ProduceRequestsPerSec"}
    {"obj": "kafka.network:type=RequestMetrics,name=RequestsPerSec,request=FetchConsumer", "attr": ["Count","MeanRate","OneMinuteRate","FiveMinuteRate","FifteenMinuteRate"], "resultAlias": "FetchConsumerRequestsPerSec"}
    {"obj": "kafka.network:type=RequestMetrics,name=RequestsPerSec,request=FetchFollower", "attr": ["Count","MeanRate","OneMinuteRate","FiveMinuteRate","FifteenMinuteRate"], "resultAlias": "FetchFollower"}
    {"obj": "kafka.network:type=RequestMetrics,name=TotalTimeMs,request=Produce", "attr": ["Count","Min","Max","Mean","StdDev", "50thPercentile","75thPercentile","95thPercentile","98thPercentile","99thPercentile","999thPercentile"], "resultAlias": "ProduceTotalTimeMs"}
    {"obj": "kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchConsumer", "attr": ["Count","Min","Max","Mean","StdDev", "50thPercentile","75thPercentile","95thPercentile","98thPercentile","99thPercentile","999thPercentile"], "resultAlias": "FetchConsumerTotalTimeMs"}
    {"obj": "kafka.network:type=RequestMetrics,name=TotalTimeMs,request=FetchFollower", "attr": ["Count","Min","Max","Mean","StdDev", "50thPercentile","75thPercentile","95thPercentile","98thPercentile","99thPercentile","999thPercentile"], "resultAlias": "FetchFollowerTotalTimeMs"}
    {"obj": "kafka.network:type=RequestMetrics,name=RequestQueueTimeMs,request=FetchFollower", "attr": ["Count","Min","Max","Mean","StdDev", "50thPercentile","75thPercentile","95thPercentile","98thPercentile","99thPercentile","999thPercentile"], "resultAlias": "FetchFollowerRequestQueueTimeMs"}
    {"obj": "kafka.network:type=RequestMetrics,name=RequestQueueTimeMs,request=FetchConsumer", "attr": ["Count","Min","Max","Mean","StdDev", "50thPercentile","75thPercentile","95thPercentile","98thPercentile","99thPercentile","999thPercentile"], "resultAlias": "FetchConsumerRequestQueueTimeMs"}
    {"obj": "kafka.network:type=RequestMetrics,name=RequestQueueTimeMs,request=Produce", "attr": ["Count","Min","Max","Mean","StdDev", "50thPercentile","75thPercentile","95thPercentile","98thPercentile","99thPercentile","999thPercentile"], "resultAlias": "ProduceRequestQueueTimeMs"}
    {"obj": "kafka.log:type=LogFlushStats,name=LogFlushRateAndTimeMs", "attr": ["Count","MeanRate","OneMinuteRate","FiveMinuteRate","FifteenMinuteRate","Min","Max","Mean","StdDev", "50thPercentile","75thPercentile","95thPercentile","98thPercentile","99thPercentile","999thPercentile"], "resultAlias": "LogFlush"}
    {"obj": "kafka.network:type=SocketServer,name=NetworkProcessorAvgIdlePercent", "attr": ["Value"], "resultAlias": "NetworkProcessorAvgIdlePercent"}
    {"obj": "kafka.server:type=FetcherLagMetrics,name=ConsumerLag,clientId=*,topic=*,partition=*", "attr": ["Value"], "resultAlias": "ConsumerLag"}
    {"obj": "kafka.server:type=ProducerRequestPurgatory,name=PurgatorySize", "attr": ["Value"], "resultAlias": "ProducerRequestsPurgatorySize"}
    {"obj": "kafka.server:type=FetchRequestPurgatory,name=PurgatorySize", "attr": ["Value"], "resultAlias": "FetchRequestPurgatorySize"}
  boot.sh: |+
    #!/bin/sh

    set -e
    set -x

    export JMXTRANS_OPTS="$JMXTRANS_OPTS -Dlogback.configurationFile=file:///${JMXTRANS_HOME}/conf/logback.xml -DkafkaJmxPort=$KAFKA_JMX_PORT -Dalias=$POD_NAME -DinfluxUrl=$INFLUXDB_HOST -DinfluxDatabase=$INFLUXDB_DATABASE -DinfluxUser=$INFLUXDB_USER -DinfluxPass=$INFLUXDB_PASSWORD"
    exec java $JAVA_OPTS $JMXTRANS_OPTS -jar $JAR_FILE -e -j $JSON_DIR -s $SECONDS_BETWEEN_RUNS -c $CONTINUE_ON_ERROR