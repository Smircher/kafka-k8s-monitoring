apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-jmxexporter-config
data:
  config.yml: |+
    ---
    hostPort: localhost:9010
---
# A headless service to create DNS records
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kafka
  name: kafka
spec:
  clusterIP: None
  ports:
    - { name: "kafka", port: 9092 }
  selector:
    app: kafka
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: kafka
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: kafka
---      
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka
spec:
  serviceName: kafka
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
      annotations:
        prometheus.io/scrape: 'true'
    spec:
      containers:
        - name: kafka
          image: wurstmeister/kafka:2.12-2.2.0
          env:
            - { name: KAFKA_LISTENERS,                      value: "PLAINTEXT://:9092" }
            - { name: HOSTNAME_COMMAND,                     value: "echo $HOSTNAME" }
            - { name: KAFKA_ADVERTISED_LISTENERS,           value: "PLAINTEXT://_{HOSTNAME_COMMAND}.kafka:9092" }
            - { name: BROKER_ID_COMMAND,                    value: "echo ${HOSTNAME##*-}" }
            - { name: KAFKA_HEAP_OPTS,                      value: "-Xms1g -Xmx1g" }
            - { name: KAFKA_ZOOKEEPER_CONNECT,              value: "zookeeper" }
            - { name: KAFKA_JMX_OPTS,                       value: "-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.rmi.port=9010" }
            - { name: JMX_PORT,                             value: "9010" }
          resources:
            requests: { memory: "2Gi" }
            limits:   { memory: "2Gi" }
          ports:
            - { name: broker-port, containerPort: 9092, protocol: TCP }
          readinessProbe:
            tcpSocket:
              port: 9092
          volumeMounts:
            - {name: data,    mountPath: /var/lib/kafka }
            - {name: tmp,    mountPath: /tmp }
            - {name: vartmp, mountPath: /var/tmp }
        - name: "jmx-exporter"
          image: sscaling/jmx-prometheus-exporter
          ports:
           - { containerPort: 5556, name: metrics, protocol: TCP }
          env:
           - { name: JVM_OPTS,                    value: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=1" }
          volumeMounts:
           - name: kafka-jmxexporter-config
             mountPath: /opt/jmx_exporter/config.yml
             subPath: config.yml
      volumes:
        - { name: tmp,    emptyDir: {} }
        - { name: vartmp, emptyDir: {} }
        - { name: data, emptyDir: {} }
        - { name: kafka-jmxexporter-config, configMap: { name: kafka-jmxexporter-config, defaultMode: 0744 }}